{"ast":null,"code":"var _jsxFileName = \"/Users/yelezaveta/Desktop/\\u0411\\u0435\\u0437 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044F/src/components/SearchBar/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWeatherThunk } from \"../redux/thunksAPI\";\nimport WeatherCard from \"../Weather/WeatherCard\";\nimport { addToFavorites } from \"../redux/slice\";\nimport { selectWeather } from \"../redux/selectors\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onAddToFavorites\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const dispatch = useDispatch();\n  const weatherData = useSelector(selectWeather);\n  // const favorites = useSelector(selectFavorites);\n  console.log(\"weatherData::\", weatherData);\n  useEffect(() => {\n    dispatch(getWeatherThunk(searchTerm));\n  }, [dispatch, searchTerm]);\n  const handleInputChange = async event => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    if (value.trim() === \"\") {\n      setSearchResults([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${value}&limit=5&appid=18431911169fef4afbe92c0ef62b8409`);\n      const data = await response.json();\n      setSearchResults(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    setLoading(false);\n  };\n\n  // const handleKeyPress = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     if (selectedCity) {\n  //       console.log(\"Show weather card for selected city:\", selectedCity);\n  //     } else {\n  //       console.log(\"Show city list\");\n  //     }\n  //   }\n  // };\n\n  const handleCitySelect = city => {\n    setSelectedCity(city);\n    setSearchResults([]);\n    setSearchTerm(\"\"); // якщо треба глянем\n  };\n\n  // const handleAddClick = () => {\n  //   if (selectedCity) {\n  //     onAddToFavorites(selectedCity);\n  //     dispatch(addToFavorites(selectedCity));\n  //     setSelectedCity(null);\n  //   }\n  // };\n\n  const handleAddClick = () => {\n    if (selectedCity) {\n      onAddToFavorites(selectedCity);\n      dispatch(addToFavorites(weatherData));\n      setSelectedCity(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleInputChange\n      // onKeyDown={handleKeyPress}\n      ,\n      placeholder: \"Type a city name...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [searchResults === null || searchResults === void 0 ? void 0 : searchResults.map(city => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleCitySelect(city),\n        children: city.name\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)), selectedCity && /*#__PURE__*/_jsxDEV(WeatherCard, {\n        city: selectedCity.name,\n        temperature: selectedCity.temperature,\n        wind: selectedCity.wind,\n        humidity: selectedCity.humidity\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: weatherData === null || weatherData === void 0 ? void 0 : weatherData.list.slice(0, 1).map(weatherDataItem => /*#__PURE__*/_jsxDEV(WeatherCard, {\n            weatherData: weatherDataItem\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"EjnEESCLv9U7OkGCpRH4Qd/+5O0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getWeatherThunk","WeatherCard","addToFavorites","selectWeather","nanoid","jsxDEV","_jsxDEV","SearchBar","onAddToFavorites","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","loading","setLoading","selectedCity","setSelectedCity","dispatch","weatherData","console","log","handleInputChange","event","value","target","trim","response","fetch","data","json","error","handleCitySelect","city","handleAddClick","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","temperature","wind","humidity","list","slice","weatherDataItem","_c","$RefreshReg$"],"sources":["/Users/yelezaveta/Desktop/Без названия/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWeatherThunk } from \"../redux/thunksAPI\";\nimport WeatherCard from \"../Weather/WeatherCard\";\nimport { addToFavorites } from \"../redux/slice\";\nimport { selectWeather } from \"../redux/selectors\";\nimport { nanoid } from \"nanoid\";\n\nconst SearchBar = ({ onAddToFavorites }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedCity, setSelectedCity] = useState(null);\n\n  const dispatch = useDispatch();\n  const weatherData = useSelector(selectWeather);\n  // const favorites = useSelector(selectFavorites);\n  console.log(\"weatherData::\", weatherData);\n\n  useEffect(() => {\n    dispatch(getWeatherThunk(searchTerm));\n  }, [dispatch, searchTerm]);\n\n  const handleInputChange = async (event) => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    if (value.trim() === \"\") {\n      setSearchResults([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/geo/1.0/direct?q=${value}&limit=5&appid=18431911169fef4afbe92c0ef62b8409`\n      );\n      const data = await response.json();\n      setSearchResults(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    setLoading(false);\n  };\n\n  // const handleKeyPress = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     if (selectedCity) {\n  //       console.log(\"Show weather card for selected city:\", selectedCity);\n  //     } else {\n  //       console.log(\"Show city list\");\n  //     }\n  //   }\n  // };\n\n  const handleCitySelect = (city) => {\n    setSelectedCity(city);\n    setSearchResults([]);\n    setSearchTerm(\"\"); // якщо треба глянем\n  };\n\n  // const handleAddClick = () => {\n  //   if (selectedCity) {\n  //     onAddToFavorites(selectedCity);\n  //     dispatch(addToFavorites(selectedCity));\n  //     setSelectedCity(null);\n  //   }\n  // };\n\n  const handleAddClick = () => {\n    if (selectedCity) {\n      onAddToFavorites(selectedCity);\n      dispatch(addToFavorites(weatherData));\n      setSelectedCity(null);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={handleInputChange}\n        // onKeyDown={handleKeyPress}\n        placeholder=\"Type a city name...\"\n      />\n      <div>\n        {/* {loading && <p>Loading...</p>} */}\n        {/* {!loading && searchResults.length === 0 && <p>No results found.</p>} */}\n        {searchResults?.map((city) => (\n          <div key={nanoid()} onClick={() => handleCitySelect(city)}>\n            {city.name}\n          </div>\n        ))}\n        {selectedCity && (\n          <WeatherCard\n            key={nanoid()}\n            city={selectedCity.name}\n            temperature={selectedCity.temperature}\n            wind={selectedCity.wind}\n            humidity={selectedCity.humidity}\n          />\n        )}\n        <button onClick={handleAddClick}>Add</button>\n      </div>\n\n      <div>\n        <ul>\n          {selectedCity && (\n            <div>\n              {/* {weatherData?.list.map((weatherDataItem) => ( */}\n              {weatherData?.list.slice(0, 1).map((weatherDataItem) => (\n                <WeatherCard key={nanoid()} weatherData={weatherDataItem} />\n              ))}\n            </div>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}