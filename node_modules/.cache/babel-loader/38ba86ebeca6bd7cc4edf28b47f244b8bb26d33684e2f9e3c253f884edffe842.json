{"ast":null,"code":"import axios from\"axios\";const API_KEY=\"18431911169fef4afbe92c0ef62b8409\";const BASE_URL=\"https://api.openweathermap.org/data/2.5/forecast\";const $instance=axios.create({baseURL:BASE_URL});export const fetchWeather=async function(){let query=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";let units=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"metric\";let cnt=arguments.length>2&&arguments[2]!==undefined?arguments[2]:18;const{data}=await $instance.get(\"\",{params:{q:query,cnt,units,appid:API_KEY}});return data;};export const fetchWeatherData=async inputValue=>{try{const response=await fetch(\"https://api.openweathermap.org/geo/1.0/direct?q=\".concat(inputValue,\"&limit=5&appid=18431911169fef4afbe92c0ef62b8409\"));const data=await response.json();return data.map(city=>({value:\"\".concat(city.name,\", \").concat(city.country),label:\"\".concat(city.name,\", \").concat(city.country)}));}catch(error){console.error(\"Error fetching data:\",error);return[];}};","map":{"version":3,"names":["axios","API_KEY","BASE_URL","$instance","create","baseURL","fetchWeather","query","arguments","length","undefined","units","cnt","data","get","params","q","appid","fetchWeatherData","inputValue","response","fetch","concat","json","map","city","value","name","country","label","error","console"],"sources":["/Users/yelezaveta/Desktop/Без названия/src/service/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"18431911169fef4afbe92c0ef62b8409\";\n\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/forecast\";\nconst $instance = axios.create({ baseURL: BASE_URL });\n\nexport const fetchWeather = async (query = \"\", units = \"metric\", cnt = 18) => {\n  const { data } = await $instance.get(\"\", {\n    params: {\n      q: query,\n      cnt,\n      units,\n      appid: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchWeatherData = async (inputValue) => {\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/geo/1.0/direct?q=${inputValue}&limit=5&appid=18431911169fef4afbe92c0ef62b8409`\n    );\n    const data = await response.json();\n    return data.map((city) => ({\n      value: `${city.name}, ${city.country}`,\n      label: `${city.name}, ${city.country}`,\n    }));\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return [];\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,kCAAkC,CAElD,KAAM,CAAAC,QAAQ,CAAG,kDAAkD,CACnE,KAAM,CAAAC,SAAS,CAAGH,KAAK,CAACI,MAAM,CAAC,CAAEC,OAAO,CAAEH,QAAS,CAAC,CAAC,CAErD,MAAO,MAAM,CAAAI,YAAY,CAAG,cAAAA,CAAA,CAAkD,IAA3C,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAG,KAAK,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,QAAQ,IAAE,CAAAI,GAAG,CAAAJ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACvE,KAAM,CAAEK,IAAK,CAAC,CAAG,KAAM,CAAAV,SAAS,CAACW,GAAG,CAAC,EAAE,CAAE,CACvCC,MAAM,CAAE,CACNC,CAAC,CAAET,KAAK,CACRK,GAAG,CACHD,KAAK,CACLM,KAAK,CAAEhB,OACT,CACF,CAAC,CAAC,CACF,MAAO,CAAAY,IAAI,CACb,CAAC,CAED,MAAO,MAAM,CAAAK,gBAAgB,CAAG,KAAO,CAAAC,UAAU,EAAK,CACpD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,oDAAAC,MAAA,CACyBH,UAAU,mDAC/D,CAAC,CACD,KAAM,CAAAN,IAAI,CAAG,KAAM,CAAAO,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAV,IAAI,CAACW,GAAG,CAAEC,IAAI,GAAM,CACzBC,KAAK,IAAAJ,MAAA,CAAKG,IAAI,CAACE,IAAI,OAAAL,MAAA,CAAKG,IAAI,CAACG,OAAO,CAAE,CACtCC,KAAK,IAAAP,MAAA,CAAKG,IAAI,CAACE,IAAI,OAAAL,MAAA,CAAKG,IAAI,CAACG,OAAO,CACtC,CAAC,CAAC,CAAC,CACL,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,MAAO,EAAE,CACX,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}