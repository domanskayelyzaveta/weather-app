{"ast":null,"code":"var _jsxFileName = \"/Users/yelezaveta/Desktop/\\u0411\\u0435\\u0437 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044F/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport WeatherList from \"./components/Weather/WeatherList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToFavorites } from \"./components/redux/slice\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport FavoritesList from \"./components/Weather/Favorites\";\nimport WeatherCard from \"./components/Weather/WeatherCard\";\nimport Chart from \"./components/Chart/Chart\";\nimport { selectFavorites } from \"./components/redux/selectors\";\nimport i18next from \"i18next\";\nimport LangContext from \"./LangContext\";\nimport Header from \"./components/Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [cities, setCities] = useState([]);\n  const [locale, setLocale] = useState(i18next);\n  const favorites = useSelector(selectFavorites);\n  i18next.on(\"languageChanged\", lng => setLocale(i18next.language));\n  const hanleLangChange = event => {\n    i18next.changeLanguage(event.target.value);\n  };\n\n  // const handleAddToFavorites = (cityName) => {\n  //   const city = cities.find((city) => city.name === cityName);\n  //   if (city) {\n  //     const updatedCities = cities.map((c) =>\n  //       c.name === cityName ? { ...c, isFavorite: true } : c\n  //     );\n  //     setCities(updatedCities);\n  //     dispatch(addToFavorites(cityName));\n  //   }\n  // };\n\n  const handleAddToFavorites = cityData => {\n    // Uncomment the relevant lines to update the cities state\n    // const cityIndex = cities.findIndex((city) => city.name === cityData.name);\n    // if (cityIndex !== -1) {\n    //   const updatedCities = [...cities];\n    //   updatedCities[cityIndex] = {\n    //     ...updatedCities[cityIndex],\n    //     isFavorite: true,\n    //   };\n    //   setCities(updatedCities);\n    //   dispatch(addToFavorites(cityData));\n    // }\n\n    setCities([...cities, cityData]);\n    // dispatch(addToFavorites(cityData));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LangContext.Provider, {\n      value: {\n        locale,\n        setLocale\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        value: locale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        cities: cities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), favorites.length > 0 && /*#__PURE__*/_jsxDEV(WeatherList, {\n        cities: cities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"N4EwpX2TYUv9mzAna/yX+FJih2w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\n\n// onAddToFavorites = { handleAddToFavorites };\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WeatherList","useDispatch","useSelector","addToFavorites","SearchBar","FavoritesList","WeatherCard","Chart","selectFavorites","i18next","LangContext","Header","jsxDEV","_jsxDEV","App","_s","dispatch","cities","setCities","locale","setLocale","favorites","on","lng","language","hanleLangChange","event","changeLanguage","target","value","handleAddToFavorites","cityData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","length","_c","$RefreshReg$"],"sources":["/Users/yelezaveta/Desktop/Без названия/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport WeatherList from \"./components/Weather/WeatherList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToFavorites } from \"./components/redux/slice\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport FavoritesList from \"./components/Weather/Favorites\";\nimport WeatherCard from \"./components/Weather/WeatherCard\";\nimport Chart from \"./components/Chart/Chart\";\nimport { selectFavorites } from \"./components/redux/selectors\";\nimport i18next from \"i18next\";\nimport LangContext from \"./LangContext\";\nimport Header from \"./components/Header/Header\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const [cities, setCities] = useState([]);\n  const [locale, setLocale] = useState(i18next);\n  const favorites = useSelector(selectFavorites);\n\n  i18next.on(\"languageChanged\", (lng) => setLocale(i18next.language));\n\n  const hanleLangChange = (event) => {\n    i18next.changeLanguage(event.target.value);\n  };\n\n  // const handleAddToFavorites = (cityName) => {\n  //   const city = cities.find((city) => city.name === cityName);\n  //   if (city) {\n  //     const updatedCities = cities.map((c) =>\n  //       c.name === cityName ? { ...c, isFavorite: true } : c\n  //     );\n  //     setCities(updatedCities);\n  //     dispatch(addToFavorites(cityName));\n  //   }\n  // };\n\n  const handleAddToFavorites = (cityData) => {\n    // Uncomment the relevant lines to update the cities state\n    // const cityIndex = cities.findIndex((city) => city.name === cityData.name);\n    // if (cityIndex !== -1) {\n    //   const updatedCities = [...cities];\n    //   updatedCities[cityIndex] = {\n    //     ...updatedCities[cityIndex],\n    //     isFavorite: true,\n    //   };\n    //   setCities(updatedCities);\n    //   dispatch(addToFavorites(cityData));\n    // }\n\n    setCities([...cities, cityData]);\n    // dispatch(addToFavorites(cityData));\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Погода</h1>\n      <LangContext.Provider value={{ locale, setLocale }}>\n        <Header value={locale} />\n        <SearchBar cities={cities} />\n        <WeatherCard />\n        {favorites.length > 0 && <WeatherList cities={cities} />}\n      </LangContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n\n// onAddToFavorites = { handleAddToFavorites };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}