{"ast":null,"code":"import React,{useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{selectFavorites}from\"../redux/selectors\";import sprite from\"../../images/sprite.svg\";import{removeFromFavorites}from\"../redux/slice\";import{DateParagraph,DegSpan,DegSwitcherDiv,FavoriteWrapper,Img,MainWeatherInfoP,OrangeSpan,ParagraphSun,StyledChartDiv,StyledDegreeBtn,StyledFeelsPar,StyledImgSunDiv,StyledSvgDiv,StyledTemperature,StyledTitleWrapper,StyledWeatherInfoDiv,SvgCross,TemperatureDiv,TitleH2,WeatherCardWrapper,WeatherInfoDiv}from\"./WeatherCard.styled\";import moment from\"moment\";import{useTranslation}from\"react-i18next\";import Chart from\"../Chart/Chart\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const WeatherList=_ref=>{let{weatherData}=_ref;const{t}=useTranslation();const favoriteWeather=useSelector(selectFavorites);const dispatch=useDispatch();const[unit,setUnit]=useState(\"celsius\");const weatherStatus=favoriteWeather[0].list[0].weather[0].main;const sunnyWeatherStatus=weatherStatus===\"Clear\"?t(\"Sunny\"):t(weatherStatus);const formatDate=dateString=>{const date=moment(dateString);const shortDay=date.format(\"ddd\");const longMonth=date.format(\"MMMM\");return t(\"shortDays.\"+shortDay)+\", \"+date.format(\"D\")+\" \"+t(\"longMonths.\"+longMonth)+\", \"+date.format(\"HH:mm\");};const originalDate=favoriteWeather[0].list[0].dt_txt;const formattedDate=formatDate(originalDate);const convertTemperature=value=>{if(unit===\"celsius\"){return value;}else{return Math.round(value*9/5+32);}};const handleRemoveItem=index=>{dispatch(removeFromFavorites(index));};if(favoriteWeather.length===0){return/*#__PURE__*/_jsx(\"div\",{children:\"No favorite weather data available\"});}const chartDataArray=favoriteWeather.map(weather=>weather.list);return/*#__PURE__*/_jsx(FavoriteWrapper,{children:favoriteWeather.map((favorite,index)=>{const cardBackgroundColor=Math.round(convertTemperature(favorite.list[0].main.temp))<0?\"#F1F2FF\":\"#FFFAF1\";const spanColor=Math.round(convertTemperature(favorite.list[0].main.temp))<0?\"#459DE9\":\"#FFA25B\";return/*#__PURE__*/_jsxs(WeatherCardWrapper,{backgroundColor:cardBackgroundColor,children:[/*#__PURE__*/_jsx(StyledSvgDiv,{children:/*#__PURE__*/_jsx(SvgCross,{onClick:()=>handleRemoveItem(index),children:/*#__PURE__*/_jsx(\"use\",{href:\"\".concat(sprite,\"#icon-cross\")})})}),/*#__PURE__*/_jsxs(StyledTitleWrapper,{children:[/*#__PURE__*/_jsxs(TitleH2,{children:[favorite.city.name,\", \",favorite.city.country]}),/*#__PURE__*/_jsxs(StyledImgSunDiv,{children:[/*#__PURE__*/_jsx(Img,{src:\"http://openweathermap.org/img/wn/\".concat(favorite.list[0].weather[0].icon,\".png\"),alt:\"sun\"}),/*#__PURE__*/_jsx(ParagraphSun,{children:sunnyWeatherStatus})]})]}),/*#__PURE__*/_jsx(DateParagraph,{children:t(formattedDate)}),/*#__PURE__*/_jsx(StyledChartDiv,{children:/*#__PURE__*/_jsx(Chart,{data:chartDataArray[index]// temperature={temperatureData}\n})}),/*#__PURE__*/_jsxs(StyledWeatherInfoDiv,{children:[/*#__PURE__*/_jsxs(TemperatureDiv,{children:[/*#__PURE__*/_jsxs(StyledTemperature,{children:[convertTemperature(favorite.list[0].main.temp)>0?\"+\":\"\",Math.round(convertTemperature(favorite.list[0].main.temp))]}),/*#__PURE__*/_jsxs(StyledFeelsPar,{children:[t(\"feels_like\"),\":\\xA0\",/*#__PURE__*/_jsxs(DegSpan,{children:[Math.round(convertTemperature(favorite.list[0].main.feels_like)),\"\\xA0\",unit===\"celsius\"?\"°C\":\"°F\"]})]}),/*#__PURE__*/_jsxs(DegSwitcherDiv,{children:[/*#__PURE__*/_jsx(StyledDegreeBtn,{onClick:()=>setUnit(\"celsius\"),$active:unit===\"celsius\",children:\"\\xB0C\"}),/*#__PURE__*/_jsx(StyledDegreeBtn,{onClick:()=>setUnit(\"fahrenheit\"),$active:unit===\"fahrenheit\",children:\"\\xB0F\"})]})]}),/*#__PURE__*/_jsxs(WeatherInfoDiv,{children:[/*#__PURE__*/_jsxs(MainWeatherInfoP,{children:[t(\"wind\"),\": \\xA0\",/*#__PURE__*/_jsxs(OrangeSpan,{color:spanColor,children:[Math.round(favorite.list[0].wind.speed),\"\\xA0m/s\"]})]}),/*#__PURE__*/_jsxs(MainWeatherInfoP,{children:[t(\"humidity\"),\": \\xA0\",/*#__PURE__*/_jsxs(OrangeSpan,{color:spanColor,children:[favorite.list[0].main.humidity,\"%\"]})]}),/*#__PURE__*/_jsxs(MainWeatherInfoP,{children:[t(\"pressure\"),\": \\xA0\",/*#__PURE__*/_jsxs(OrangeSpan,{color:spanColor,children:[favorite.list[0].main.pressure,\"Pa\"]})]})]})]})]},index);})});};export default WeatherList;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","selectFavorites","sprite","removeFromFavorites","DateParagraph","DegSpan","DegSwitcherDiv","FavoriteWrapper","Img","MainWeatherInfoP","OrangeSpan","ParagraphSun","StyledChartDiv","StyledDegreeBtn","StyledFeelsPar","StyledImgSunDiv","StyledSvgDiv","StyledTemperature","StyledTitleWrapper","StyledWeatherInfoDiv","SvgCross","TemperatureDiv","TitleH2","WeatherCardWrapper","WeatherInfoDiv","moment","useTranslation","Chart","jsx","_jsx","jsxs","_jsxs","WeatherList","_ref","weatherData","t","favoriteWeather","dispatch","unit","setUnit","weatherStatus","list","weather","main","sunnyWeatherStatus","formatDate","dateString","date","shortDay","format","longMonth","originalDate","dt_txt","formattedDate","convertTemperature","value","Math","round","handleRemoveItem","index","length","children","chartDataArray","map","favorite","cardBackgroundColor","temp","spanColor","backgroundColor","onClick","href","concat","city","name","country","src","icon","alt","data","feels_like","$active","color","wind","speed","humidity","pressure"],"sources":["/Users/yelezaveta/Desktop/Без названия/src/components/Weather/WeatherList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFavorites } from \"../redux/selectors\";\nimport sprite from \"../../images/sprite.svg\";\nimport { removeFromFavorites } from \"../redux/slice\";\n\nimport {\n  DateParagraph,\n  DegSpan,\n  DegSwitcherDiv,\n  FavoriteWrapper,\n  Img,\n  MainWeatherInfoP,\n  OrangeSpan,\n  ParagraphSun,\n  StyledChartDiv,\n  StyledDegreeBtn,\n  StyledFeelsPar,\n  StyledImgSunDiv,\n  StyledSvgDiv,\n  StyledTemperature,\n  StyledTitleWrapper,\n  StyledWeatherInfoDiv,\n  SvgCross,\n  TemperatureDiv,\n  TitleH2,\n  WeatherCardWrapper,\n  WeatherInfoDiv,\n} from \"./WeatherCard.styled\";\nimport moment from \"moment\";\nimport { useTranslation } from \"react-i18next\";\nimport Chart from \"../Chart/Chart\";\n\nconst WeatherList = ({ weatherData }) => {\n  const { t } = useTranslation();\n\n  const favoriteWeather = useSelector(selectFavorites);\n  const dispatch = useDispatch();\n  const [unit, setUnit] = useState(\"celsius\");\n\n  const weatherStatus = favoriteWeather[0].list[0].weather[0].main;\n\n  const sunnyWeatherStatus =\n    weatherStatus === \"Clear\" ? t(\"Sunny\") : t(weatherStatus);\n\n  const formatDate = (dateString) => {\n    const date = moment(dateString);\n\n    const shortDay = date.format(\"ddd\");\n    const longMonth = date.format(\"MMMM\");\n\n    return (\n      t(\"shortDays.\" + shortDay) +\n      \", \" +\n      date.format(\"D\") +\n      \" \" +\n      t(\"longMonths.\" + longMonth) +\n      \", \" +\n      date.format(\"HH:mm\")\n    );\n  };\n\n  const originalDate = favoriteWeather[0].list[0].dt_txt;\n  const formattedDate = formatDate(originalDate);\n\n  const convertTemperature = (value) => {\n    if (unit === \"celsius\") {\n      return value;\n    } else {\n      return Math.round((value * 9) / 5 + 32);\n    }\n  };\n\n  const handleRemoveItem = (index) => {\n    dispatch(removeFromFavorites(index));\n  };\n\n  if (favoriteWeather.length === 0) {\n    return <div>No favorite weather data available</div>;\n  }\n\n  const chartDataArray = favoriteWeather.map((weather) => weather.list);\n\n  return (\n    <FavoriteWrapper>\n      {favoriteWeather.map((favorite, index) => {\n        const cardBackgroundColor =\n          Math.round(convertTemperature(favorite.list[0].main.temp)) < 0\n            ? \"#F1F2FF\"\n            : \"#FFFAF1\";\n        const spanColor =\n          Math.round(convertTemperature(favorite.list[0].main.temp)) < 0\n            ? \"#459DE9\"\n            : \"#FFA25B\";\n        return (\n          <WeatherCardWrapper key={index} backgroundColor={cardBackgroundColor}>\n            <StyledSvgDiv>\n              <SvgCross onClick={() => handleRemoveItem(index)}>\n                <use href={`${sprite}#icon-cross`}></use>\n              </SvgCross>\n            </StyledSvgDiv>\n            <StyledTitleWrapper>\n              <TitleH2>\n                {favorite.city.name}, {favorite.city.country}\n              </TitleH2>\n              <StyledImgSunDiv>\n                <Img\n                  src={`http://openweathermap.org/img/wn/${favorite.list[0].weather[0].icon}.png`}\n                  alt=\"sun\"\n                />\n                <ParagraphSun>{sunnyWeatherStatus}</ParagraphSun>\n              </StyledImgSunDiv>\n            </StyledTitleWrapper>\n            <DateParagraph>{t(formattedDate)}</DateParagraph>\n\n            <StyledChartDiv>\n              <Chart\n                data={chartDataArray[index]}\n                // temperature={temperatureData}\n              />\n            </StyledChartDiv>\n\n            <StyledWeatherInfoDiv>\n              <TemperatureDiv>\n                <StyledTemperature>\n                  {convertTemperature(favorite.list[0].main.temp) > 0\n                    ? \"+\"\n                    : \"\"}\n                  {Math.round(convertTemperature(favorite.list[0].main.temp))}\n                </StyledTemperature>\n\n                <StyledFeelsPar>\n                  {t(\"feels_like\")}:&nbsp;\n                  <DegSpan>\n                    {Math.round(\n                      convertTemperature(favorite.list[0].main.feels_like)\n                    )}\n                    &nbsp;\n                    {unit === \"celsius\" ? \"°C\" : \"°F\"}\n                  </DegSpan>\n                </StyledFeelsPar>\n\n                <DegSwitcherDiv>\n                  <StyledDegreeBtn\n                    onClick={() => setUnit(\"celsius\")}\n                    $active={unit === \"celsius\"}\n                  >\n                    °C\n                  </StyledDegreeBtn>\n                  <StyledDegreeBtn\n                    onClick={() => setUnit(\"fahrenheit\")}\n                    $active={unit === \"fahrenheit\"}\n                  >\n                    °F\n                  </StyledDegreeBtn>\n                </DegSwitcherDiv>\n              </TemperatureDiv>\n\n              <WeatherInfoDiv>\n                <MainWeatherInfoP>\n                  {t(\"wind\")}: &nbsp;\n                  <OrangeSpan color={spanColor}>\n                    {Math.round(favorite.list[0].wind.speed)}&nbsp;m/s\n                  </OrangeSpan>\n                </MainWeatherInfoP>\n                <MainWeatherInfoP>\n                  {t(\"humidity\")}: &nbsp;\n                  <OrangeSpan color={spanColor}>\n                    {favorite.list[0].main.humidity}%\n                  </OrangeSpan>\n                </MainWeatherInfoP>\n                <MainWeatherInfoP>\n                  {t(\"pressure\")}: &nbsp;\n                  <OrangeSpan color={spanColor}>\n                    {favorite.list[0].main.pressure}Pa\n                  </OrangeSpan>\n                </MainWeatherInfoP>\n              </WeatherInfoDiv>\n            </StyledWeatherInfoDiv>\n          </WeatherCardWrapper>\n        );\n      })}\n    </FavoriteWrapper>\n  );\n};\n\nexport default WeatherList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}