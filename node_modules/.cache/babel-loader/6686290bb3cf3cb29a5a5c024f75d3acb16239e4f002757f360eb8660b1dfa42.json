{"ast":null,"code":"var _jsxFileName = \"/Users/yelezaveta/Desktop/\\u0411\\u0435\\u0437 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044F/src/components/Weather/WeatherCard.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectWeather } from \"../redux/selectors\";\nimport { DateParagraph, Img, ParagraphSun, StyledChartDiv, StyledDegreeBtn, StyledImgSunDiv, StyledTemperature, StyledTitleWrapper, StyledWeatherInfoDiv, TitleH2, WeatherCardWrapper } from \"./WeatherCard.styled\";\nimport moment from \"moment\";\nimport Chart from \"../Chart/Chart\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherCard = ({\n  weatherData\n}) => {\n  _s();\n  var _weather$city, _weather$city2, _weatherData$weather$;\n  console.log(\"CARD:\", weatherData);\n  const weather = useSelector(selectWeather);\n  const [unit, setUnit] = useState(\"celsius\");\n  const cityName = weather === null || weather === void 0 ? void 0 : (_weather$city = weather.city) === null || _weather$city === void 0 ? void 0 : _weather$city.name;\n  const country = weather === null || weather === void 0 ? void 0 : (_weather$city2 = weather.city) === null || _weather$city2 === void 0 ? void 0 : _weather$city2.country;\n  const icon = weatherData === null || weatherData === void 0 ? void 0 : weatherData.weather[0].icon;\n  const weatherStatus = weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$weather$ = weatherData.weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.main;\n  const iconUrl = `http://openweathermap.org/img/wn/${icon}.png`;\n  if (!weatherData || !weatherData.main || !weatherData.weather || !weatherData.wind) {\n    return;\n  }\n  const sunnyWeatherStatus = weatherStatus === \"Clear\" ? \"Sunny\" : weatherStatus;\n  const formatDate = dateString => {\n    const date = moment(dateString);\n    const formattedDate = date.format(\"ddd, D MMMM, HH:mm\");\n    return formattedDate;\n  };\n  const originalDate = weatherData === null || weatherData === void 0 ? void 0 : weatherData.dt_txt;\n  const formattedDate = formatDate(originalDate);\n  const convertTemperature = value => {\n    if (unit === \"celsius\") {\n      return value;\n    } else {\n      return Math.round(value * 9 / 5 + 32);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherCardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTitleWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(TitleH2, {\n        children: [cityName, \", \", country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledImgSunDiv, {\n        children: [/*#__PURE__*/_jsxDEV(Img, {\n          src: iconUrl,\n          alt: \"sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ParagraphSun, {\n          children: sunnyWeatherStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateParagraph, {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledChartDiv, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledWeatherInfoDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(StyledTemperature, {\n          children: Math.round(convertTemperature(weatherData.main.temp))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feels like:\", Math.round(convertTemperature(weatherData.main.feels_like)), unit === \"celsius\" ? \"C°\" : \"F°\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(StyledDegreeBtn, {\n          onClick: () => setUnit(\"celsius\"),\n          $active: unit === \"celsius\",\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledDegreeBtn, {\n          onClick: () => setUnit(\"fahrenheit\"),\n          $active: unit === \"fahrenheit\",\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind: \", weatherData.wind.speed, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"m/s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity: \", weatherData.main.humidity, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Weather: \", weatherData.main.pressure, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherCard, \"M4z4noxjxb56EOZ30+jYUEMSrss=\", false, function () {\n  return [useSelector];\n});\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["useSelector","selectWeather","DateParagraph","Img","ParagraphSun","StyledChartDiv","StyledDegreeBtn","StyledImgSunDiv","StyledTemperature","StyledTitleWrapper","StyledWeatherInfoDiv","TitleH2","WeatherCardWrapper","moment","Chart","useState","jsxDEV","_jsxDEV","WeatherCard","weatherData","_s","_weather$city","_weather$city2","_weatherData$weather$","console","log","weather","unit","setUnit","cityName","city","name","country","icon","weatherStatus","main","iconUrl","wind","sunnyWeatherStatus","formatDate","dateString","date","formattedDate","format","originalDate","dt_txt","convertTemperature","value","Math","round","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","temp","feels_like","onClick","$active","speed","humidity","pressure","_c","$RefreshReg$"],"sources":["/Users/yelezaveta/Desktop/Без названия/src/components/Weather/WeatherCard.jsx"],"sourcesContent":["// import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectWeather } from \"../redux/selectors\";\nimport {\n  DateParagraph,\n  Img,\n  ParagraphSun,\n  StyledChartDiv,\n  StyledDegreeBtn,\n  StyledImgSunDiv,\n  StyledTemperature,\n  StyledTitleWrapper,\n  StyledWeatherInfoDiv,\n  TitleH2,\n  WeatherCardWrapper,\n} from \"./WeatherCard.styled\";\nimport moment from \"moment\";\nimport Chart from \"../Chart/Chart\";\nimport { useState } from \"react\";\n\nconst WeatherCard = ({ weatherData }) => {\n  console.log(\"CARD:\", weatherData);\n  const weather = useSelector(selectWeather);\n\n  const [unit, setUnit] = useState(\"celsius\");\n\n  const cityName = weather?.city?.name;\n  const country = weather?.city?.country;\n  const icon = weatherData?.weather[0].icon;\n  const weatherStatus = weatherData?.weather[0]?.main;\n\n  const iconUrl = `http://openweathermap.org/img/wn/${icon}.png`;\n\n  if (\n    !weatherData ||\n    !weatherData.main ||\n    !weatherData.weather ||\n    !weatherData.wind\n  ) {\n    return;\n  }\n\n  const sunnyWeatherStatus =\n    weatherStatus === \"Clear\" ? \"Sunny\" : weatherStatus;\n\n  const formatDate = (dateString) => {\n    const date = moment(dateString);\n    const formattedDate = date.format(\"ddd, D MMMM, HH:mm\");\n\n    return formattedDate;\n  };\n\n  const originalDate = weatherData?.dt_txt;\n  const formattedDate = formatDate(originalDate);\n\n  const convertTemperature = (value) => {\n    if (unit === \"celsius\") {\n      return value;\n    } else {\n      return Math.round((value * 9) / 5 + 32);\n    }\n  };\n\n  return (\n    <WeatherCardWrapper>\n      <StyledTitleWrapper>\n        <TitleH2>\n          {cityName}, {country}\n        </TitleH2>\n        <StyledImgSunDiv>\n          <Img src={iconUrl} alt=\"sun\" />\n          <ParagraphSun>{sunnyWeatherStatus}</ParagraphSun>\n        </StyledImgSunDiv>\n      </StyledTitleWrapper>\n\n      <DateParagraph>{formattedDate}</DateParagraph>\n\n      <StyledChartDiv>\n        <Chart />\n      </StyledChartDiv>\n\n      <StyledWeatherInfoDiv>\n        <div>\n          <StyledTemperature>\n            {Math.round(convertTemperature(weatherData.main.temp))}\n          </StyledTemperature>\n          <p>\n            Feels like:\n            {Math.round(convertTemperature(weatherData.main.feels_like))}\n            {unit === \"celsius\" ? \"C°\" : \"F°\"}\n          </p>\n        </div>\n\n        <div>\n          <StyledDegreeBtn\n            onClick={() => setUnit(\"celsius\")}\n            $active={unit === \"celsius\"}\n          >\n            °C\n          </StyledDegreeBtn>\n          <StyledDegreeBtn\n            onClick={() => setUnit(\"fahrenheit\")}\n            $active={unit === \"fahrenheit\"}\n          >\n            °F\n          </StyledDegreeBtn>\n        </div>\n\n        <div>\n          <p>\n            Wind: {weatherData.wind.speed} <span>m/s</span>\n          </p>\n          <p>\n            Humidity: {weatherData.main.humidity}\n            <span>%</span>\n          </p>\n          <p>\n            Weather: {weatherData.main.pressure}\n            <span>Pa</span>\n          </p>\n        </div>\n      </StyledWeatherInfoDiv>\n    </WeatherCardWrapper>\n  );\n};\n\nexport default WeatherCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}