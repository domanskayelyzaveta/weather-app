{"ast":null,"code":"var _jsxFileName = \"/Users/yelezaveta/Desktop/\\u0411\\u0435\\u0437 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044F/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport WeatherList from \"./components/Weather/WeatherList\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport WeatherCard from \"./components/Weather/WeatherCard\";\nimport { selectFavorites } from \"./components/redux/selectors\";\nimport Header from \"./components/Header/Header\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./i18n\";\nimport axios from \"axios\";\nimport { addToFavorites } from \"./components/redux/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire(\"dotenv\").config();\nconst App = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [weatherData, setWeatherData] = useState(null);\n  const favorites = useSelector(selectFavorites);\n  const [location, setLocation] = useState(null);\n  useEffect(() => {\n    currentLocationWeather();\n  }, []);\n  const currentLocationWeather = () => {\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n          params: {\n            lat: latitude,\n            lon: longitude,\n            appid: \"18431911169fef4afbe92c0ef62b8409\",\n            units: \"metric\"\n          }\n        });\n        const weatherData = response.data;\n        setWeatherData(weatherData);\n        setLocation({\n          latitude,\n          longitude\n        });\n      } catch (error) {\n        toast.error(\"Error fetching weather data:\", error);\n      }\n    }, error => {\n      toast.error(\"Error getting current location:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(I18nextProvider, {\n    i18n: i18n,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        cities: cities,\n        setCities: setCities,\n        addToFavorites: addToFavorites,\n        location: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherCard, {\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), favorites.length > 0 && /*#__PURE__*/_jsxDEV(WeatherList, {\n        cities: cities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-center\",\n        autoClose: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xvxyDt5yH02sl3RBjDvy7MY7dFE=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WeatherList","ToastContainer","toast","useSelector","SearchBar","WeatherCard","selectFavorites","Header","I18nextProvider","i18n","axios","addToFavorites","jsxDEV","_jsxDEV","require","config","App","_s","cities","setCities","weatherData","setWeatherData","favorites","location","setLocation","currentLocationWeather","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","get","params","lat","lon","appid","units","data","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","autoClose","_c","$RefreshReg$"],"sources":["/Users/yelezaveta/Desktop/Без названия/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherList from \"./components/Weather/WeatherList\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport WeatherCard from \"./components/Weather/WeatherCard\";\nimport { selectFavorites } from \"./components/redux/selectors\";\nimport Header from \"./components/Header/Header\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./i18n\";\nimport axios from \"axios\";\nimport { addToFavorites } from \"./components/redux/slice\";\n\nrequire(\"dotenv\").config();\n\nconst App = () => {\n  const [cities, setCities] = useState([]);\n  const [weatherData, setWeatherData] = useState(null);\n  const favorites = useSelector(selectFavorites);\n  const [location, setLocation] = useState(null);\n\n  useEffect(() => {\n    currentLocationWeather();\n  }, []);\n\n  const currentLocationWeather = () => {\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        const { latitude, longitude } = position.coords;\n        try {\n          const response = await axios.get(\n            `https://api.openweathermap.org/data/2.5/weather`,\n            {\n              params: {\n                lat: latitude,\n                lon: longitude,\n                appid: \"18431911169fef4afbe92c0ef62b8409\",\n                units: \"metric\",\n              },\n            }\n          );\n          const weatherData = response.data;\n          setWeatherData(weatherData);\n          setLocation({ latitude, longitude });\n        } catch (error) {\n          toast.error(\"Error fetching weather data:\", error);\n        }\n      },\n      (error) => {\n        toast.error(\"Error getting current location:\", error);\n      }\n    );\n  };\n\n  return (\n    <I18nextProvider i18n={i18n}>\n      <div className=\"container\">\n        <Header />\n        <SearchBar\n          cities={cities}\n          setCities={setCities}\n          addToFavorites={addToFavorites}\n          location={location}\n        />\n        {weatherData && <WeatherCard weatherData={weatherData} />}\n        {favorites.length > 0 && <WeatherList cities={cities} />}\n        <ToastContainer position=\"top-center\" autoClose={3000} />\n      </div>\n    </I18nextProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}